name: Benchmarks

inputs:
  cpu-label:
    description: "Runner's CPU label"
    required: true
  mem-label:
    description: "Amount of RAM the runner has"
    required: true
  compute-type:
    description: "Type of compute used by the runner (CUDA/Metal/None)"
    default: "None"
    required: false
  token:
    description: "GitHub runner token"
    required: true

runs:
  using: composite
  steps:
    - run: echo "Running on ${{ inputs.cpu-label }} - ${{ inputs.mem-label }} - ${{ inputs.compute-type }}"
      shell: bash
    - uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install Dependencies
      shell: bash
      run: |
        if [ "${{ inputs.compute-type }}" == "Metal" ]; then
          mkdir homebrew && curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C homebrew
          eval "$(homebrew/bin/brew shellenv)"
          brew install jq gnu-time
          echo "PATH=\"homebrew/bin:$PATH\"" >> $GITHUB_ENV
        elif [ "${{ inputs.compute-type }}" == "CUDA" ]; then
          echo "Skipping installation on CUDA"
        else
          sudo apt-get update && sudo apt-get install -y openssl libssl-dev jq time
        fi
    - uses: software-mansion/setup-scarb@v1
      with:
        scarb-version: "2.4.2"
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: nightly-2024-01-16
        components: rustfmt, clippy
    - uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-nextest
        locked: true
    - name: Cargo clean
      shell: bash
      run: cargo clean
    - name: Delete Cargo.lock
      shell: bash
      run: rm -f Cargo.lock
    - name: Install Risc0 toolchain
      shell: bash
      run: |
        cargo install cargo-binstall
        cargo binstall cargo-risczero@0.19.1 --no-confirm
        cargo risczero install
    - name: Install Rust jupyter kernel
      shell: bash
      run: |
        cargo install evcxr_jupyter
        evcxr_jupyter --install
    - name: Build ZKML
      shell: bash
      run: cargo build --release
      working-directory: ./src/zkml
    - name: Download and Install EZKL Binary
      shell: bash
      run: |
        curl https://raw.githubusercontent.com/zkonduit/ezkl/main/install_ezkl_cli.sh | bash || true
        mv ${XDG_CONFIG_HOME:-$HOME}/.ezkl/ezkl /usr/local/bin/ || true
        ezkl --version
    - name: Setup Environment
      shell: bash
      run: |
        python -m venv .env
        source .env/bin/activate
        echo "ENABLE_ICICLE_GPU=${{ inputs.compute-type == 'CUDA' }}" >> $GITHUB_ENV
    - name: Run Benchmarks
      shell: bash
      run: |
        source .env/bin/activate
        case "${{ inputs.compute-type }}" in
          # This flag is for risc0 only. For now, we're unable to bench using CUDA with Risc0 due to https://github.com/risc0/risc0/issues/1025
          #          CUDA)
          #            feature="cuda"
          #            ;;
          Metal)
            feature="metal"
            ;;
          *)
            feature=""
            ;;
        esac
        if [ -n "$feature" ]; then
          cargo nextest run --features $feature benchmarking_tests::tests --test-threads 1
        else
          cargo nextest run benchmarking_tests::tests --test-threads 1
        fi
    - name: Process Results
      shell: bash
      run: |
        jq '.' benchmarks.json
        jq '.' benchmarks.json > "${{ inputs.cpu-label }}-${{ inputs.mem-label }}-${{ inputs.compute-type }}.json"
    - name: Upload Benchmark Results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.cpu-label }}-${{ inputs.mem-label }}-${{ inputs.compute-type }}
        path: ${{ inputs.cpu-label }}-${{ inputs.mem-label }}-${{ inputs.compute-type }}.json
        overwrite: true
